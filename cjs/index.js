var E=Object.create;var v=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var M=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var x=(e,t)=>{for(var s in t)v(e,s,{get:t[s],enumerable:!0})},O=(e,t,s,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of b(t))!A.call(e,i)&&i!==s&&v(e,i,{get:()=>t[i],enumerable:!(a=L(t,i))||a.enumerable});return e};var G=(e,t,s)=>(s=e!=null?E(M(e)):{},O(t||!e||!e.__esModule?v(s,"default",{value:e,enumerable:!0}):s,e)),H=e=>O(v({},"__esModule",{value:!0}),e);var N={};x(N,{yellowDuck:()=>n});module.exports=H(N);var p=[],m={};var y=G(require("events")),w=require("fs");var P=({app:e,pool:t,timeout:s,headerGetter:a})=>{function i(r,o){return typeof o=="object"&&o.kind=="stream"?r.send((0,w.createReadStream)(o.args[0],o.args[1])):r.send(o)}p.forEach(r=>{if(r.method==="GET")if(t)e.get(r.url,async({query:o,headers:c},l)=>{let u=new y.default,d=setTimeout(()=>{u.emit("abort")},s),h=await t.run({uri:r.method+r.url,body:o,headers:a(c)},{signal:u});return clearTimeout(d),i(l,h)});else{let o=m[r.method+r.url];e.get(r.url,async({query:c,headers:l},u)=>{let d=await Promise.resolve(o({uri:r.method+r.url,body:c,headers:a(l)}));return i(u,d)})}else if(t)e[r.method.toLocaleLowerCase()](r.url,async({body:o,headers:c},l)=>{let u=new y.default,d=setTimeout(()=>{u.emit("abort")},s),h=await t.run({uri:r.method+r.url,body:JSON.parse(o),headers:a(c)},{signal:u});return clearTimeout(d),i(l,h)});else{let o=m[r.method+r.url];e[r.method.toLocaleLowerCase()](r.url,async({body:c,headers:l},u)=>{let d=await Promise.resolve(o({uri:r.method+r.url,body:JSON.parse(c),headers:a(l)}));return i(u,d)})}})};var T=async(e,t,{timeout:s=1e4,minThreads:a=0,maxThreads:i,maxQueue:r,idleTimeout:o=5e3}={})=>{if(await new Promise(f=>setTimeout(f,200)),!t.onMaster)return;let c=require("node:cluster");if(c.isPrimary){c.fork(),c.on("exit",(f,g,S)=>{console.log(`worker ${f.process.pid} died`),c.fork()}),console.log("daemon pid:",process.pid);return}console.log("master pid:",process.pid);let l=require("fastify"),d=require("node:os").cpus().length-1;d<2&&(d=2),i||(i=d),r||(r=d*2500);let h=l();if(e==="threadsPool"){let f=require("piscina");try{let g=new f({filename:__filename,env:process.env,execArgv:process.execArgv,argv:process.argv,idleTimeout:o,minThreads:a,maxThreads:i,maxQueue:r});await async function(){let S=t.headerGetter;P({app:h,pool:g,timeout:s,headerGetter:S})}(),await Promise.resolve(t.onMaster({app:h,pool:g}))}catch(g){console.error(g),h.log.error(g)}}else await async function(){let f=t.headerGetter;P({app:h,pool:null,timeout:s,headerGetter:f})}(),await Promise.resolve(t.onMaster({app:h,pool:null}))};var n=async({uri:e,body:t,headers:s})=>{n.onMaster=null;let a=m[e];return a?await Promise.resolve(a({body:t,headers:s})):Error("Not found uri: "+e)};n.all=(e,t)=>{p.push({url:e,method:"ALL"}),m["ALL"+e]=t};n.get=(e,t)=>{p.push({url:e,method:"GET"}),m["GET"+e]=t};n.post=(e,t)=>{p.push({url:e,method:"POST"}),m["POST"+e]=t};n.put=(e,t)=>{p.push({url:e,method:"PUT"}),m["PUT"+e]=t};n.patch=(e,t)=>{p.push({url:e,method:"PATCH"}),m["PATCH"+e]=t};n.delete=(e,t)=>{p.push({url:e,method:"DELETE"}),m["DELETE"+e]=t};n.options=(e,t)=>{p.push({url:e,method:"OPTIONS"}),m["OPTIONS"+e]=t};n.headerGetter=e=>({});n.onMaster=void 0;n.startWithSingle=()=>T("single",n);n.startWithThreadsPool=e=>T("threadsPool",n,e);0&&(module.exports={yellowDuck});
