var O=Object.create;var g=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var b=(e,r)=>{for(var n in r)g(e,n,{get:r[n],enumerable:!0})},S=(e,r,n,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of E(r))!M.call(e,t)&&t!==n&&g(e,t,{get:()=>r[t],enumerable:!(a=w(r,t))||a.enumerable});return e};var A=(e,r,n)=>(n=e!=null?O(L(e)):{},S(r||!e||!e.__esModule?g(n,"default",{value:e,enumerable:!0}):n,e)),x=e=>S(g({},"__esModule",{value:!0}),e);var G={};b(G,{yellowDuck:()=>o});module.exports=x(G);var l=[],d={};var v=A(require("events"));var P=({app:e,pool:r,timeout:n,headerGetter:a})=>{l.forEach(t=>{if(t.method==="GET")if(r)e.get(t.url,async({query:h,headers:c},m)=>{let u=new v.default,s=setTimeout(()=>{u.emit("abort")},n);try{let i=await r.run({uri:t.method+t.url,body:h,headers:a(c)},{signal:u});return clearTimeout(s),m.send(i)}catch(i){return clearTimeout(s),m.send(i)}});else{let h=d[t.method+t.url];e.get(t.url,async({query:c,headers:m},u)=>{try{let s=await Promise.resolve(h({uri:t.method+t.url,body:c,headers:a(m)}));return u.send(s)}catch(s){return u.send(s)}})}else if(r)e[t.method.toLocaleLowerCase()](t.url,async({body:h,headers:c},m)=>{let u=new v.default,s=setTimeout(()=>{u.emit("abort")},n);try{let i=await r.run({uri:t.method+t.url,body:JSON.parse(h),headers:a(c)},{signal:u});return clearTimeout(s),m.send(i)}catch(i){return clearTimeout(s),m.send(i)}});else{let h=d[t.method+t.url];e[t.method.toLocaleLowerCase()](t.url,async({body:c,headers:m},u)=>{try{let s=await Promise.resolve(h({uri:t.method+t.url,body:JSON.parse(c),headers:a(m)}));return u.send(s)}catch(s){return u.send(s)}})}})};var T=async(e,r,{timeout:n=1e4,minThreads:a=0,maxThreads:t,idleTimeout:h=5e3}={})=>{if(await new Promise(p=>setTimeout(p,200)),!r.onMaster)return;let c=require("node:cluster");if(c.isPrimary){c.fork(),c.on("exit",(p,f,y)=>{console.log(`worker ${p.process.pid} died, code: ${f}, signal:${y}`),c.fork()}),console.log("daemon pid:",process.pid);return}console.log("master pid:",process.pid);let m=require("fastify"),s=require("node:os").cpus().length-1;s<2&&(s=2),t||(t=s);let i=m();if(e==="threadsPool"){let p=require("piscina");try{let f=new p({filename:__filename,env:process.env,execArgv:process.execArgv,argv:process.argv,idleTimeout:h,minThreads:a,maxThreads:t});await async function(){let y=r.headerGetter;P({app:i,pool:f,timeout:n,headerGetter:y})}(),await Promise.resolve(r.onMaster({app:i,pool:f}))}catch(f){console.error(f),i.log.error(f)}}else await async function(){let p=r.headerGetter;P({app:i,pool:null,timeout:n,headerGetter:p})}(),await Promise.resolve(r.onMaster({app:i,pool:null}))};var o=async({uri:e,body:r,headers:n})=>{o.onMaster=null;let a=d[e];return a?await Promise.resolve(a({body:r,headers:n})):Error("Not found uri: "+e)};o.all=(e,r)=>{l.push({url:e,method:"ALL"}),d["ALL"+e]=r};o.get=(e,r)=>{l.push({url:e,method:"GET"}),d["GET"+e]=r};o.post=(e,r)=>{l.push({url:e,method:"POST"}),d["POST"+e]=r};o.put=(e,r)=>{l.push({url:e,method:"PUT"}),d["PUT"+e]=r};o.patch=(e,r)=>{l.push({url:e,method:"PATCH"}),d["PATCH"+e]=r};o.delete=(e,r)=>{l.push({url:e,method:"DELETE"}),d["DELETE"+e]=r};o.options=(e,r)=>{l.push({url:e,method:"OPTIONS"}),d["OPTIONS"+e]=r};o.headerGetter=e=>({});o.onMaster=void 0;o.startWithSingle=()=>T("single",o);o.startWithThreadsPool=e=>T("threadsPool",o,e);0&&(module.exports={yellowDuck});
